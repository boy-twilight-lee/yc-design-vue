html[yc-design-dark] {
  // button
  @dark-colors: {
    primary: rgb(53, 122, 255);
    primary-hover: rgb(85, 150, 255);
    primary-active: rgb(30, 90, 210);
    warning: rgb(255, 168, 0);
    warning-hover: rgb(255, 190, 40);
    warning-active: rgb(210, 130, 0);
    success: rgb(0, 200, 60);
    success-hover: rgb(35, 215, 80);
    success-active: rgb(0, 170, 50);
    danger: rgb(255, 90, 90);
    danger-hover: rgb(255, 120, 120);
    danger-active: rgb(210, 60, 60);
    text: rgb(220, 220, 220);
    text-hover: rgb(50, 50, 50);
    text-active: rgb(70, 70, 70);
    secondary-bg: rgb(50, 54, 60);
    secondary-hover: rgb(70, 75, 85);
    secondary-active: rgb(90, 95, 105);
    dashed-border: rgb(70, 75, 85);
    dashed-border-hover: rgb(90, 95, 105);
    dashed-border-active: rgb(110, 115, 125);
  };
  @type: {
    @primary: {
      @normal: {
        bg: @dark-colors[primary];
        hover: @dark-colors[primary-hover];
        active: @dark-colors[primary-active];
        text: #fff;
      };
      @warning: {
        bg: @dark-colors[warning];
        hover: @dark-colors[warning-hover];
        active: @dark-colors[warning-active];
        text: #fff;
      };
      @success: {
        bg: @dark-colors[success];
        hover: @dark-colors[success-hover];
        active: @dark-colors[success-active];
        text: #fff;
      };
      @danger: {
        bg: @dark-colors[danger];
        hover: @dark-colors[danger-hover];
        active: @dark-colors[danger-active];
        text: #fff;
      };
    };
    @secondary: {
      @normal: {
        bg: @dark-colors[secondary-bg];
        hover: @dark-colors[secondary-hover];
        active: @dark-colors[secondary-active];
        text: @dark-colors[text];
      };
      @warning: {
        bg: rgb(70, 60, 40); // 更深的橙色背景
        hover: rgb(100, 80, 50);
        active: rgb(130, 100, 60);
        text: @dark-colors[warning];
      };
      @success: {
        bg: rgb(40, 70, 45); // 更深的绿色背景
        hover: rgb(50, 100, 55);
        active: rgb(60, 130, 65);
        text: @dark-colors[success];
      };
      @danger: {
        bg: rgb(70, 40, 40); // 更深的红色背景
        hover: rgb(100, 50, 50);
        active: rgb(130, 60, 60);
        text: @dark-colors[danger];
      };
    };
    @dashed: {
      @normal: {
        bg: @dark-colors[secondary-bg];
        hover: @dark-colors[secondary-hover];
        active: @dark-colors[secondary-active];
        border: @dark-colors[dashed-border];
        border-hover: @dark-colors[dashed-border-hover];
        border-active: @dark-colors[dashed-border-active];
        text: @dark-colors[text];
      };
      @warning: {
        bg: rgb(70, 60, 40);
        hover: rgb(100, 80, 50);
        active: rgb(130, 100, 60);
        border: rgb(100, 80, 50);
        border-hover: rgb(130, 100, 60);
        border-active: rgb(160, 120, 70);
        text: @dark-colors[warning];
      };
      @success: {
        bg: rgb(40, 70, 45);
        hover: rgb(50, 100, 55);
        active: rgb(60, 130, 65);
        border: rgb(50, 100, 55);
        border-hover: rgb(60, 130, 65);
        border-active: rgb(70, 160, 75);
        text: @dark-colors[success];
      };
      @danger: {
        bg: rgb(70, 40, 40);
        hover: rgb(100, 50, 50);
        active: rgb(130, 60, 60);
        border: rgb(100, 50, 50);
        border-hover: rgb(130, 60, 60);
        border-active: rgb(160, 70, 70);
        text: @dark-colors[danger];
      };
    };
    @outline: {
      @normal: {
        bg: transparent;
        border: @dark-colors[primary];
        border-hover: @dark-colors[primary-hover];
        border-active: @dark-colors[primary-active];
        text: @dark-colors[primary];
        text-hover: @dark-colors[primary-hover];
        text-active: @dark-colors[primary-active];
      };
      @warning: {
        bg: transparent;
        border: @dark-colors[warning];
        border-hover: @dark-colors[warning-hover];
        border-active: @dark-colors[warning-active];
        text: @dark-colors[warning];
        text-hover: @dark-colors[warning-hover];
        text-active: @dark-colors[warning-active];
      };
      @success: {
        bg: transparent;
        border: @dark-colors[success];
        border-hover: @dark-colors[success-hover];
        border-active: @dark-colors[success-active];
        text: @dark-colors[success];
        text-hover: @dark-colors[success-hover];
        text-active: @dark-colors[success-active];
      };
      @danger: {
        bg: transparent;
        border: @dark-colors[danger];
        border-hover: @dark-colors[danger-hover];
        border-active: @dark-colors[danger-active];
        text: @dark-colors[danger];
        text-hover: @dark-colors[danger-hover];
        text-active: @dark-colors[danger-active];
      };
    };
    @text: {
      @normal: {
        text: @dark-colors[primary];
      };
      @warning: {
        text: @dark-colors[warning];
      };
      @success: {
        text: @dark-colors[success];
      };
      @danger: {
        text: @dark-colors[danger];
      };
    };
  };
  each(@type, .(@type-value, @type-name) {
      @type-key: replace(~"@{type-name}", "@", "");
      .yc-button.yc-button-@{type-key} {
        each(@type-value, .(@status-value, @status-name) {
          @status-key: replace(~"@{status-name}", "@", "");
          &.yc-button-status-@{status-key} {
            color: @status-value[text];
            & when(isdefined(@status-value[bg])){
              background-color: @status-value[bg];
            }
            & when(isdefined(@status-value[border])){
              border-color: @status-value[border];
            }
             &:not(.yc-button-disabled):not(.yc-button-loading) {
                &:hover {
                  & when(isdefined(@status-value[hover])){
                    background-color: @status-value[hover];
                  }
                  & when(isdefined(@status-value[text-hover])){
                    color: @status-value[text-hover];
                  }
                  & when(isdefined(@status-value[border-hover])){
                    border-color: @status-value[border-hover];
                  }
                }
                &:active {
                  & when(isdefined(@status-value[border-active])){
                    border-color: @status-value[border-active];
                  }
                  & when(isdefined(@status-value[text-active])){
                    color: @status-value[text-active];
                  }
                  & when(isdefined(@status-value[active])){
                    background-color: @status-value[active];
                  }
                }
              }
            & when(@type-key = dashed){
             border-style: dashed;
            }
            & when(@type-key = text){
              background-color: transparent;
              &:not(.yc-button-disabled):not(.yc-button-loading) {
                &:hover {
                  background-color: @dark-colors[text-hover]; 
                }
                &:active {
                  background-color: @dark-colors[text-active]; 
                }
              }
            }
          }
        }
        )
      }
    });
  // loading 效果在暗色主题下需要调整
  .yc-button-loading {
    &::before {
      background-color: #000;
      opacity: 0.4;
    }
  }

  // button-group
  @border-colors: {
    primary: rgb(22, 93, 255);
    secondary: rgb(60, 60, 62);
    warning: rgb(250, 140, 42);
    success: rgb(19, 173, 58);
    danger: rgb(245, 63, 63);
  };
  each(@border-colors, {
    &.yc-button-group-@{key} {
      .yc-button:not(:last-child) {
        border-right: 1px solid @value;
      }
    }
    &.yc-button-group-status-@{key} {
      .yc-button:not(:last-child) {
        border-right: 1px solid @value;
      }
    }
  });
}
