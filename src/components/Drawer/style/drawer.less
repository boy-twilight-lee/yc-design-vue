.yc-drawer-wrapper {
  --yc-drawer-mask-bg: rgba(29, 33, 41, 0.6);
  --yc-drawer-container-bg: #fff;
  --yc-drawer-border-color: rgb(229, 230, 235);
  --yc-drawer-title-color: rgb(29, 33, 41);
  --yc-drawer-body-color: rgb(29, 33, 41);
  html[yc-design-dark] & {
    --yc-drawer-mask-bg: rgba(0, 0, 0, 0.45);
    --yc-drawer-container-bg: rgb(36, 36, 36);
    --yc-drawer-border-color: rgb(54, 54, 54);
    --yc-drawer-title-color: rgb(229, 229, 229);
    --yc-drawer-body-color: rgb(229, 229, 229);
  }
}

.yc-drawer-wrapper {
  overflow: hidden;
  position: fixed;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;

  .yc-drawer-mask {
    position: absolute;
    height: 100%;
    width: 100%;
    background-color: var(--yc-drawer-mask-bg);
  }
  .yc-drawer-container {
    position: absolute;
    height: 100%;
    background-color: var(--yc-drawer-container-bg);
    display: flex;
    flex-direction: column;
    .yc-drawer-footer,
    .yc-drawer-body,
    .yc-drawer-header,
    .yc-drawer-title,
    .yc-drawer-close-button {
      flex-shrink: 0;
    }
    .yc-drawer-header {
      height: 48px;
      width: 100%;
      padding: 0 16px;
      border-bottom: 1px solid var(--yc-drawer-border-color);
      display: flex;
      align-items: center;
      .yc-drawer-title {
        flex: 1;
        span {
          font-size: 16px;
          font-weight: 500;
          color: var(--yc-drawer-title-color);
        }
      }
      .yc-drawer-close-button {
        margin-left: -12px;
      }
    }
    .yc-drawer-body {
      flex: 1;
      line-height: 1.5715;
      padding: 12px 16px;
      color: var(--yc-drawer-body-color);
      font-size: 14px;
    }
    .yc-drawer-footer {
      height: 64px;
      width: 100%;
      padding: 0 16px;
      border-top: 1px solid var(--yc-drawer-border-color);
      display: flex;
      justify-content: flex-end;
      align-items: center;
      gap: 12px;
    }
  }
}
.yc-drawer-position-absolute {
  position: absolute;
}
// placement
@drawer-placements: left, right, bottom, top;
each(@drawer-placements, .(@key){
  .yc-drawer-placement-@{key} {
    .yc-drawer-container {
      & when (@key = left),(@key = top),(@key = bottom){
        left: 0;
      }
      & when (@key = right){
        right: 0;
      }
      & when(@key = left),(@key = right),(@key = top){
        top: 0;
      }
      & when(@key = bottom){
        bottom: 0;
      }
      & when (@key = left),(@key = right){
         bottom: 0;
      }
      & when (@key = top),(@key = bottom){
        right: 0;
     }
    }
  }
});
